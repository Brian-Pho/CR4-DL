{"version":3,"file":"component---src-pages-timeline-tsx-013004a1f259a4e64019.js","mappings":"2LAYA,MAAMA,EAAOC,IAAiC,IAAhC,KAAEC,EAAI,MAAEC,GAAkBF,EACtC,OACEG,EAAAA,cAAA,WAASC,UAAU,QACjBD,EAAAA,cAAA,UAAKF,GACLE,EAAAA,cAAA,eACGD,EAAMG,KAAI,CAACC,EAAMC,IAEdJ,EAAAA,cAAA,MAAIK,IAAKD,GACPJ,EAAAA,cAAA,UACEA,EAAAA,cAACM,EAAAA,KAAI,CAACC,GAAIJ,EAAKK,KAAKC,OAAOC,MACxBP,EAAKK,KAAKG,YAAYC,YAO3B,EA0Dd,MAtDqBC,KACnB,MAsBMd,GAtBwBe,EAAAA,EAAAA,gBAAe,aAsB1BC,kBAAkBC,MAG/BC,EAAa,IAAIC,IACjBC,EAAYpB,EAAMG,KAAIC,GACnBA,EAAKK,KAAKG,YAAYS,OAEzBC,EAAQC,MAAMC,KAAK,IAAIC,IAAIL,IACjC,IAAK,MAAMrB,KAAQuB,EACjBJ,EAAWQ,IAAI3B,EAAM,IAIvB,IAAK,MAAMK,KAAQJ,EAAO,CACxB,MAAM2B,EAAWvB,EAAKK,KAAKG,YAAYS,KAClCM,GAILT,EAAWU,IAAID,GAAUE,KAAKzB,EAChC,CAEA,OACEH,EAAAA,cAAA,OAAKC,UAAU,yCACZoB,EAAMnB,KAAI,CAACJ,EAAMM,IACTJ,EAAAA,cAACJ,EAAI,CAACE,KAAMA,EAAMC,MAAOkB,EAAWU,IAAI7B,GAAOO,IAAKD,MAEzD,ECnEV,MAXiByB,IAEb7B,EAAAA,cAAC8B,EAAAA,EAAM,CAACC,WAAW,YACjB/B,EAAAA,cAACgC,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,GAAIjC,UAAU,iBAC5BD,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAACa,EAAY,O","sources":["webpack://CR4-DL/./src/components/postTimeline/postTimeline.tsx","webpack://CR4-DL/./src/pages/timeline.tsx"],"sourcesContent":["import React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport \"./postTimeline.scss\"\nimport { AllMarkdownType, PostType } from \"../../utils/graphqlTypes\"\n\ninterface YearProps {\n  year: string\n  posts: {\n    node: PostType\n  }[]\n}\n\nconst Year = ({ year, posts }: YearProps) => {\n  return (\n    <section className=\"year\">\n      <h3>{year}</h3>\n      <section>\n        {posts.map((post, index) => {\n          return (\n            <ul key={index}>\n              <li>\n                <Link to={post.node.fields.slug}>\n                  {post.node.frontmatter.title}\n                </Link>\n              </li>\n            </ul>\n          )\n        })}\n      </section>\n    </section>\n  )\n}\n\nconst PostTimeline = () => {\n  const data: AllMarkdownType = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: { frontmatter: { layout: { eq: \"post\" } } }\n        sort: {frontmatter: {date: DESC}}\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              date(formatString: \"YYYY\")\n              categories\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMarkdownRemark.edges\n\n  // Create mapping of years to posts within that year\n  const yearToPost = new Map()\n  const postYears = posts.map(post => {\n    return post.node.frontmatter.date\n  })\n  const years = Array.from(new Set(postYears))\n  for (const year of years) {\n    yearToPost.set(year, [])\n  }\n\n  // Filter all posts and add them to their respective year\n  for (const post of posts) {\n    const postYear = post.node.frontmatter.date\n    if (!postYear) {\n      continue\n    }\n\n    yearToPost.get(postYear).push(post)\n  }\n\n  return (\n    <div className=\"timeline position-relative m-2 m-md-4\">\n      {years.map((year, index) => {\n        return <Year year={year} posts={yearToPost.get(year)} key={index} />\n      })}\n    </div>\n  )\n}\n\nexport default PostTimeline\n","import React from \"react\"\nimport Layout from \"../components/layout/layout\"\nimport Col from \"react-bootstrap/Col\"\nimport PostTimeline from \"../components/postTimeline/postTimeline\"\n\nconst Timeline = () => {\n  return (\n    <Layout activePage=\"Timeline\">\n      <Col md={6} xs={12} className=\"p-md-4 p-xl-5\">\n        <h1>Timeline</h1>\n        <PostTimeline />\n      </Col>\n    </Layout>\n  )\n}\n\nexport default Timeline\n"],"names":["Year","_ref","year","posts","React","className","map","post","index","key","Link","to","node","fields","slug","frontmatter","title","PostTimeline","useStaticQuery","allMarkdownRemark","edges","yearToPost","Map","postYears","date","years","Array","from","Set","set","postYear","get","push","Timeline","Layout","activePage","Col","md","xs"],"sourceRoot":""}